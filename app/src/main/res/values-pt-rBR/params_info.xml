<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- VM -->
    <string name="admin_reserve_kbytes">A quantidade de memória livre no sistema que deve ser reservada para usuários com o recurso cap_sys_admin</string>
    <string name="block_dump">Ativa o bloqueio da depuração de E/S quando definido como um valor diferente de zero</string>
    <string name="compact_memory">Disponível apenas quando CONFIG_COMPACTION está definido. Quando 1 é gravado no arquivo, todas as zonas são compactadas para que a memória livre esteja disponível em blocos contíguos sempre que possível.</string>
    <string name="compact_unevictable_allowed">Disponível apenas quando CONFIG_COMPACTION está definido. Quando definido como 1, a compactação pode examinar o lru inevitável (páginas com mlock) para compactar páginas. Defina como 0 para impedir que a compactação mova páginas inevitáveis. O valor padrão é 1.</string>
    <string name="dirty_background_bytes">Contém a quantidade de memória suja na qual os threads de descarga do kernel em segundo plano iniciarão o write-back.</string>
    <string name="dirty_background_ratio">Contém, como uma porcentagem do total de memória disponível que contém páginas livres e páginas recuperáveis, o número de páginas nas quais os threads de descarga do kernel em segundo plano começarão a gravar dados sujos.</string>
    <string name="dirty_bytes">Contém a quantidade de memória suja na qual um processo que gera gravações em disco iniciará ele mesmo o write-back. Nota: dirty_bytes é a contrapartida de dirty_ratio. Somente um deles pode ser especificado por vez.</string>
    <string name="dirty_expire_centisecs">Usado para definir quando os dados sujos são antigos o suficiente para serem elegíveis para gravação pelos threads de descarga do kernel. É expresso em centésimos de segundo. Os dados que ficaram sujos na memória por mais tempo que esse intervalo serão gravados na próxima vez que um encadeamento de descarga for ativado.</string>
    <string name="dirty_ratio">Contém, como uma porcentagem do total de memória disponível que contém páginas livres e páginas recuperáveis, o número de páginas nas quais um processo que está gerando gravações em disco começará a gravar dados sujos.</string>
    <string name="dirtytime_expire_seconds">Este ajuste é usado para definir quando o inode sujo é antigo o suficiente para ser elegível para write-back pelos threads de descarga do kernel. Quando um inode preguiçoso está constantemente sujando suas páginas, o inode com uma data/hora atualizada nunca terá chance de ser gravado.</string>
    <string name="dirty_writeback_centisecs">Os threads de limpeza de kernel são ativados periodicamente e gravam dados \"antigos\". Este ajuste expressa o intervalo entre essas ativações, em centésimos de segundos. Definir isso como zero desativa completamente a gravação periódica.</string>
    <string name="drop_caches">Gravar1, 2 ou 3 nesse arquivo fará com que o kernel elimine os caches limpos, além de objetos slab recuperáveis, como dentries e inodes. Uma vez descartada, a memória delas fica livre.</string>
    <string name="extfrag_threshold">Este parâmetro afeta se o kernel compactará a memória ou recuperará diretamente para satisfazer uma alocação de memória de ordem superior. Valores tendendo a 0 implicam que alocações falhariam devido à falta de memória, valores perto de 1000 implicam que falhas são devido à fragmentação e -1 implica que a alocação terá êxito enquanto as marcas d\'água forem atendidas.\n\nPadrão: 500.</string>
    <string name="highmem_is_dirtyable">Controla se a memória alta é considerada para a limitação de gravadores de dadod sujos</string>
    <string name="laptop_mode">Este é um knob que controla o \"modo laptop\". O modo laptop é usado para minimizar o tempo que o disco precisa ser girado, para economizar energia da bateria.</string>
    <string name="legacy_va_layout">Se diferente de zero, este sysctl desabilita o novo layout de mmap de 32 bits - o kernel usará o layout herdado (2.4) para todos os processos.</string>
    <string name="max_map_count">Este arquivo contém o número máximo de áreas de mapas de memória que um processo pode ter. Embora a maioria dos aplicativos precise de menos de mil mapas, determinados programas, principalmente depuradores malloc, podem consumir muitos deles, por exemplo, até um ou dois mapas por alocação. O valor padrão é 65536.</string>
    <string name="min_free_kbytes">Isso é usado para forçar a Máquina Virtual do Linux a manter um número mínimo de kilobytes livres. Definir um valor muito alto fará com que a sua máquina fique imediatamente sem memória.</string>
    <string name="mmap_min_addr">Este arquivo indica a quantidade de espaço de endereço que um processo do usuário será impedido chamar o comando mmap</string>
    <string name="mmap_rnd_bits">Esse valor pode ser usado para selecionar o número de bits a serem usados para determinar o deslocamento aleatório para o endereço base das regiões vma resultantes das alocações de do comando mmap em arquiteturas que suportam o ajuste da randomização do espaço de endereço. Este valor será limitado pelos valores mínimos e máximos suportados da arquitetura.</string>
    <string name="mmap_rnd_compat_bits">Esse valor pode ser usado para selecionar o número de bits a serem usados para determinar o deslocamento aleatório para o endereço base das regiões vma resultantes das alocações do comando mmap para aplicativos executados no modo de compatibilidade em arquiteturas que suportam o ajuste da randomização do espaço de endereço. Este valor será limitado pelos valores mínimos e máximos suportados da arquitetura.</string>
    <string name="oom_dump_tasks">Permite que um dump de tarefas em todo o sistema (excluindo threads do kernel) seja produzido quando o kernel executa uma limpeza em situações de pouca memória. Se isso estiver definido como zero, essas informações serão suprimidas. Se isso estiver definido como diferente de zero, essas informações serão mostradas sempre que limpador de pouca memória realmente matar uma tarefa que esteja sobrecarregando de memória.</string>
    <string name="oom_kill_allocating_task">Isso habilita ou desabilita a eliminação da tarefa de acionamento do OOM em situações de falta de memória. Se isso estiver definido como diferente de zero, o limpador de pouca memória simplesmente matará a tarefa que acionou a condição de falta de memória. Isso evita a verificação custosa da lista de tarefas.</string>
    <string name="overcommit_kbytes">Quando overcommit_memory está definido como 2, o espaço de endereço confirmado não pode exceder a troca mais essa quantidade de RAM física. Nota: overcommit_kbytes é a contrapartida de overcommit_ratio. Somente um deles pode ser especificado por vez.</string>
    <string name="overcommit_memory">Este valor contém um sinalizador que permite o comprometimento excessivo da memória.\n\nQuando esse sinalizador for 0, o kernel tenta estimar a quantidade de memória livre restante quando o espaço do usuário solicita mais memória.\n\nQuando esse sinalizador for 1, o kernel finge que há sempre há memória suficiente até que ele realmante fique sem.\n\nQuando esse sinalizador for 2, o kernel usa uma política de \"nunca comprometer demais\" que tenta impedir o comprometimento excessivo da memória.</string>
    <string name="overcommit_ratio">Quando overcommit_memory for definido como 2, o espaço de endereço confirmado não pode exceder a troca mais essa porcentagem de RAM física</string>
    <string name="page_cluster">Controla o número de páginas até as quais páginas consecutivas são lidas no swap em uma única tentativa. Esta é a contrapartida de troca para o readahead do cache da página. É um valor logarítmico - defini-lo como zero significa \'1 página\', defini-lo como 1 significa \'2 páginas\', defini-lo como 2 significa \'4 páginas\', etc. \ nZero desativa completamente o readahead de swap.</string>
    <string name="panic_on_oom">Isto ativa ou desativa o recurso pânico em falta de memória (panic on out-of-memory).</string>
    <string name="percpu_pagelist_fraction">Esta é a fração de páginas, no máximo, em cada zona alocada para cada lista de páginas por CPU. O valor mínimo para isto é 8.</string>
    <string name="stat_interval">O intervalo de tempo entre o qual as estatísticas vm são atualizadas. O padrão é 1 segundo.</string>
    <string name="swappiness">Este controle é usado para definir o quão agressivo o kernel irá trocar páginas de memória. Valores mais altos irão aumentar a agressividade, a valores mais baixos irão diminuir a quantidade de swap. Padrão: 60.</string>

    <!-- Kernel/Random -->
    <string name="boot_id">Identifica exclusivamente a inicialização atual.</string>
    <string name="entropy_avail">Entropia atual disponível.</string>
    <string name="poolsize">Limite máximo de bits que a pool de entropia pode conter.</string>
    <string name="read_wakeup_threshold">O número de bits de entropia necessários para estar disponível antes de permitir a leitura das interfaces aleatórias.</string>
    <string name="write_wakeup_threshold">Limite para entropy_avail no qual os dispositivos bloqueando são ativados para gravar no pool de entropia.</string>

    <!-- NET/Core -->
    <string name="busy_read">Tempo limite de pesquisa ocupada de baixa latência para leituras de soquete. (precisa de CONFIG_NET_RX_BUSY_POLL) Tempo aproximado entre nós e o loop ocupado aguardando pacotes na fila do dispositivo. Isso define o valor padrão da opção de soquete SO_BUSY_POLL. Padrão: 0 (desativado).</string>
    <string name="busy_poll">Tempo limite de pesquisa ocupada de baixa latência para pesquisa e seleção. (precisa de CONFIG_NET_RX_BUSY_POLL) Tempo aproximado entre nós e o loop ocupado aguardando eventos. O valor recomendado depende do número de soquetes em que você pesquisa. Para vários soquetes: 50, para várias centenas: 100. Padrão: 0 (desativado).</string>
    <string name="default_qdisc">A disciplina de enfileiramento padrão a ser usada para dispositivos de rede. Isso permite substituir o padrão de pfifo_fast por uma alternativa. Padrão: pfifo_fast.</string>
    <string name="dev_weight">O número máximo de pacotes que o kernel pode manipular em uma interrupção NAPI, é uma variável por CPU.</string>
    <string name="message_burst">Message_burst e message_cost são usados para limitar as mensagens de aviso gravadas no log do kernel a partir do código de rede. Eles impõem um limite de taxa para impossibilitar um ataque do DOS. Um fator maior de message_cost resulta em menos mensagens que serão gravadas. Message_burst controla quando as mensagens serão descartadas. As configurações padrão limitam as mensagens de aviso a uma a cada cinco segundos.</string>
    <string name="message_cost">Message_burst e message_cost são usados para limitar as mensagens de aviso gravadas no log do kernel a partir do código de rede. Eles impõem um limite de taxa para impossibilitar um ataque do DOS. Um fator maior de message_cost resulta em menos mensagens que serão gravadas. Message_burst controla quando as mensagens serão descartadas. As configurações padrão limitam as mensagens de aviso a uma a cada cinco segundos.</string>
    <string name="warnings">[Não é mais usado] Foi usado para controlar as mensagens do console da pilha de rede que ocorrem devido a problemas na rede, como endereço duplicado ou somas de verificação incorretas.</string>
    <string name="netdev_budget">Número máximo de pacotes obtidos de todas as interfaces em um ciclo de pesquisa (pesquisa NAPI)</string>
    <string name="optmem_max">Tamanho máximo do buffer auxiliar permitido por soquete. Dados auxiliares são uma sequência de estruturas struct cmsghdr com dados anexados.</string>
    <string name="rmem_default">A configuração padrão do buffer do soquete de recebimento em bytes.</string>
    <string name="rmem_max">O tamanho máximo do buffer de soquete de recebimento em bytes.</string>
    <string name="wmem_default">A configuração padrão (em bytes) do soquete de envio do buffer.</string>
    <string name="wmem_max">O tamanho máximo do buffer de soquete de envio em bytes.</string>

</resources>